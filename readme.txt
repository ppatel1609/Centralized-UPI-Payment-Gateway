TEAM MEMBERS - 
NIschay Agrawal - 2022A7PS1381H
Aryan Deshmukh -  2022A7PS1283H
Saharsh Misra 2022A7PS0074H
Pulin Patel - 2022A7PS1539H
Tanish Patel - 2022A7PS0103H

STEPS TO RUN CODE - 
first run the creating_data2.py file to record the merchant and user data
then run the generating_keys.py file to create the private and public keys for RSA
Run the upi_machine.py file next, as it is the server
once the qr code is generated, run the user_client.py file on another laptop and scan it
when the upi machine prompts that it's waiting for the bank, only then run the bank_client.py file
it'll give the verification 

WORKING OF THE PROJECT -

The data is stored by the bank in a .json file. When upi_machine is run initially, it asks for MID as input which is then encrypted as the VMID using SPECK and a qrcode is generated using it. The user then establishes the connection
using the qrcode, and the vmid in the qrcode is sent back to the upi machine to verify the transaction. The user also sends the PIN and MMID along with amount to the qr code which is encrypted using RSA to ensure that no hacker gets the information.
It is then decrypted at the upi_machine and sent to the bank the verify the details. The bank ensures that the pin is correct and that the MMID and MID are valid and that there's enough bank balance. If the transaction  is successful, the data is sent. The upi machine deletes the qr code after the transaction is completed to ensure to one can duplicate it or use it for any malpractice later.

Blockchain is used to store the transaction history in another json file and the amounts are updated when the transaction is verified in the json file that contains the data of the merchants and users.

blockchain - used to maintain secure and immutable transaction records.
	it maintains the following -
		transaction ID - hash of UID, MID, timestamp and amount 
		previous block hash
		timestamp
	every valid transaction basically creates a new block

quantum cryptography -  using shor's alg to identify potential vulnerabilities in user credentials like pin and mmid

lightweight cryptography - encrypts the merchant ID entered by the merchant along with the timestamp to create the VMID using the SPECK algorithm. 


Merchant ID(MID) - 16 digits(hexadecimal), hashed by the SHA256 alg using the name, time of account creation and password. Unique to every merchant, shouldn't be shared. 
User ID(UID) - 16 digits, exactly like MID
MMID - 16 digits hexadecimal, hashed using UID and mobile number with the sha256 algorithm
VMID - generated by LWC(speck) using merchant ID and timestamp.

upi machine - 
encrypting merchant info
communicating with the bank and user, so it's the server in the socket programming architecture.
It uses the SPECK algorithm to generate the VMID
generates qr code when the merchant enters his/her MID
gets the data from the user along with the hashed version of the vmid or whatever, verifies it with the vmid it has stored, if matches it sends the transaction request to bank and waits for response
receives success/failure message from the bank and forwards it to the user
once message is received, deletes the qr code that was generated and forgets the MID.

user laptop -
transaction is initiated by scanning qr code
enter transaction amount, mmid, upi id, pin (this data apparently is supposed to be hashed?????? but that doesn't make any sense)        -----------------------------------   VERIFY THIS ONE THING IT'S IMPORTANT 
it also needs to send the hashed vmid it receives from the scanned qr code along with all the other details

bank laptop -
allows bankers to access transaction data of the bank
also view merchant data and user data
verifies the PIN and MMID and transaction amount and validates transaction
uses blockchain to maintain transaction history
generates 16 digit Merchant ID which is the account number
generates 16 digit UID for the users
so it uses the SHA256 algorithm.
decrypts user credentials, and after validating data it stores transaction in blockchain and funds are transferred to the merchant.

	bank registration - 3 banks, HDFC, ICICI and SBI
		merchant registration - 
			providing name, IFSC code, password to access account, initial amount in account
			bank then creates account number(MID). So it also needs to store timestamp of account creation? MID is also stored
		user registration - 
			name, IFSC code, password, initial amount in account
			timestamp as well, and store the UID
			mobile number
			use UID and mobile number to create MMID and store MMID
			PIN 


